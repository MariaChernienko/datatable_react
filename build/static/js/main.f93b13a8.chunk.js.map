{"version":3,"sources":["components/Pagination.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","_ref","page","perPage","totalCount","onPageChange","pagesCount","Math","ceil","pages","Array","fill","map","_","i","react_default","a","createElement","p","key","className","onClick","Table","state","sortColumn","sortAsc","query","visibleQuery","countCheckButton","handleQueryChange","event","_this","setState","target","value","updateQuery","debounce","handleHeaderClick","props","config","isSortable","handleItemInput","item","items","id","note","blur","sortItems","_ref2","sign","sortFn","b","localeCompare","Object","toConsumableArray","sort","filterItems","_ref3","queryRegexp","RegExp","filter","test","name","paginateItems","_ref4","start","end","slice","checkedItems","_ref5","checked","handlePerPageChange","handlePageChange","handleCheckedStatus","type","handleButtonClick","_this2","this","_this$state","_this$props","sortedItems","filteredItems","paginatedItems","visibleItems","placeholder","onChange","entries","_ref6","_ref7","slicedToArray","concat","title","keys","onKeyPress","render","components_Pagination","length","React","Component","peopleColConfig","checkbox","isSearchable","person","Link","to","born","age","died","sex","defaultValue","App","people","fetch","responce","json","objectSpread","components_Table","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f93b13a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Pagination = ({ page, perPage, totalCount, onPageChange }) => {\r\n  const pagesCount = Math.ceil(totalCount / perPage);\r\n  const pages = Array(pagesCount).fill(0).map((_, i) => i + 1);\r\n\r\n  return (\r\n    <div>\r\n      {pages.map(p => (\r\n        <button\r\n          key={p}\r\n          className={p === page ? 'Paginate-btn' : 'Paginate-btn_active'}\r\n          onClick={() => onPageChange(p)}\r\n        >\r\n          { p }\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport Pagination from \"./Pagination.js\";\r\n\r\nimport debounce from \"lodash/debounce\";\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    sortColumn: null,\r\n    sortAsc: true,\r\n    query: \"\",\r\n    visibleQuery: \"\",\r\n    perPage: 10,\r\n    page: 1,\r\n    countCheckButton: 0,\r\n  };\r\n\r\n  handleQueryChange = event => {\r\n    this.setState({\r\n      visibleQuery: event.target.value\r\n    });\r\n    this.updateQuery(event.target.value);\r\n  };\r\n\r\n  updateQuery = debounce(query => {\r\n    this.setState({\r\n      query: query,\r\n      page: 1\r\n    });\r\n  }, 500);\r\n\r\n  handleHeaderClick = (key) => {\r\n  \r\n    if (!this.props.config[key].isSortable) {\r\n      return;\r\n    }\r\n\r\n    this.setState(({ sortColumn, sortAsc }) => {\r\n      return {\r\n        sortColumn: key,\r\n        sortAsc: sortColumn === key ? !sortAsc : true\r\n      };\r\n    });\r\n  };\r\n\r\n  handleItemInput = (event, item) => {\r\n    const { items } = this.props;\r\n    items[item.id].note = event.target.value;\r\n\r\n    if (event.key === \"Enter\") {\r\n      event.target.blur();\r\n    }\r\n  };\r\n\r\n  sortItems = ({ items, sortColumn, sortAsc }) => {\r\n    if (!sortColumn) {\r\n      return items;\r\n    }\r\n\r\n    const sign = sortAsc ? 1 : -1;\r\n    const sortFn =\r\n      typeof items[0][sortColumn] === \"number\"\r\n        ? (a, b) => sign * (a[sortColumn] - b[sortColumn])\r\n        : (a, b) => sign * a[sortColumn].localeCompare(b[sortColumn]);\r\n    return [...items].sort(sortFn);\r\n  };\r\n\r\n  filterItems = ({ items, query }) => {\r\n    const queryRegexp = new RegExp(query, \"i\");\r\n    return items.filter(item => queryRegexp.test(item.name));\r\n  };\r\n\r\n  paginateItems = ({ items, perPage, page }) => {\r\n    const start = (page - 1) * perPage;\r\n    const end = start + perPage;\r\n\r\n    return items.slice(start, end);\r\n  };\r\n\r\n  checkedItems = ({ items }) => {\r\n    const { countCheckButton } = this.state;\r\n\r\n    if(countCheckButton%2 === 0) {\r\n      return items;\r\n    } else {\r\n      return items.filter(item => item.checked);\r\n    }\r\n  }\r\n\r\n  handlePerPageChange = event => {\r\n    this.setState({\r\n      perPage: +event.target.value,\r\n      page: 1\r\n    });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleCheckedStatus = (event, item) => {\r\n    const { items } = this.props;\r\n    \r\n    if(event.target.type !== 'checkbox') {\r\n      return ;\r\n    }\r\n    if(!items[item.id].checked) {\r\n      items[item.id].checked = true\r\n    } else {\r\n      items[item.id].checked = false\r\n    }\r\n  }\r\n\r\n  handleButtonClick = ( items ) => {\r\n    const { countCheckButton } = this.state;\r\n\r\n    this.setState({\r\n      countCheckButton: countCheckButton + 1,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      page,\r\n      perPage,\r\n      query,\r\n      visibleQuery,\r\n      sortColumn,\r\n      sortAsc,\r\n      countCheckButton,\r\n    } = this.state;\r\n    const { items, config } = this.props;\r\n\r\n    const sortedItems = this.sortItems({\r\n      items,\r\n      sortColumn,\r\n      sortAsc\r\n    });\r\n\r\n    const filteredItems = this.filterItems({\r\n      items: sortedItems,\r\n      query\r\n    });\r\n\r\n    const paginatedItems = this.paginateItems({\r\n      items: filteredItems,\r\n      page,\r\n      perPage\r\n    });\r\n\r\n    const visibleItems = this.checkedItems({\r\n      items: paginatedItems,\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"Table-App\">\r\n        <div className=\"Table-App_Menu\">\r\n          <h3>data table with some people</h3>\r\n          <div>\r\n            <button onClick={this.handleButtonClick}>\r\n              {countCheckButton%2===0 ? 'Show checked' : 'Show All'}\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={visibleQuery}\r\n              onChange={this.handleQueryChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"Table-App_Table\">\r\n          <thead className=\"Table-App_Table-header\">\r\n            <tr>\r\n              {Object.entries(config).map(([key, value]) => (\r\n                <th\r\n                  key={key}\r\n                  className={`Table-cell dark-border ${config[key].isSortable ? \"sortable-column\" : \"\"}`}\r\n                  onClick={() => this.handleHeaderClick(key)}\r\n                >\r\n                  {value.title}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {visibleItems.map(item => (\r\n              <tr \r\n                key={item.id} \r\n                className=\"Table-App_Table-row\"\r\n              >\r\n                {Object.keys(config).map(key => (\r\n                  <td \r\n                    key={key} \r\n                    className=\"Table-cell\"\r\n                    onKeyPress={event => this.handleItemInput(event, item)}\r\n                    onChange={event => this.handleCheckedStatus(event, item)}\r\n                  >\r\n                    {config[key].render ? config[key].render(item) : item[key]} \r\n                  </td>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <div className='Table-App_Footer'>\r\n          <div>\r\n            <h4>People per page:</h4>\r\n            <select onChange={this.handlePerPageChange} value={this.state.perPage}>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"40\">40</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Pagination\r\n            page={page}\r\n            perPage={perPage}\r\n            totalCount={filteredItems.length}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Table from './components/Table.js';\n\nimport './App.css';\n\nconst peopleColConfig = {\n  checkbox: {\n    title: '',\n    render: () => (\n      <input type=\"checkbox\" />\n    )\n  },\n  name: {\n    title: 'Name', \n    isSortable: true, \n    isSearchable: true,\n    render: (person) => (\n      <Link to={`/people/${person.name}`}>{person.name}</Link>\n    )\n  },\n  born: {\n    title: 'Date of Birth',\n    isSortable: true, \n  },\n  age: {\n    title: \"Age\",\n    render: (person) => person.died - person.born,\n  },\n  sex: { \n    title: 'Gender',\n  },\n  note: {\n    title: 'Note',\n    render: (person) => <input defaultValue={person.note}/>\n  }\n};\n\nclass App extends Component {\n  \n  state = {\n    people:[], \n    config: peopleColConfig,\n  };\n\n  async componentDidMount() {\n    const responce = await fetch('https://mate-academy.github.io/fe-program/js/tasks/people/people.json');\n    const people = await responce.json();\n     \n    this.setState({\n      people: people.map((person, id) => {\n        return { ...person, id: id, checked: false };\n      }),\n    });\n  }\n\n  render() {\n    const { people, config } = this.state;\n    return (\n      <div className=\"App\">\n        <Table items={people} config={config}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}